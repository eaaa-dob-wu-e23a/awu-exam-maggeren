{
  "version": 3,
  "sources": ["../../../app/routes/events.$eventId.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/events.$eventId.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/events.$eventId.jsx\");\n  import.meta.hot.lastModified = \"1710265461050.1753\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport EventCard from \"../components/EventCard\";\nimport { authenticator } from \"../services/auth.server\";\nimport Button from \"../components/Button\";\nexport function meta({\n  data\n}) {\n  return [{\n    title: `FitMeet - ${data.event.title || \"Event\"}`\n  }];\n}\nexport async function loader({\n  request,\n  params\n}) {\n  // Ensure the user is authenticated\n  const authUser = await authenticator.isAuthenticated(request);\n  // Load the post and the user who created it\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\"creator\").populate(\"attendees\");\n  return json({\n    event,\n    authUser\n  });\n}\nexport async function action({\n  request,\n  params\n}) {\n  // Protect the route\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: request.url\n  });\n  // Delete the post\n  await mongoose.models.Event.findByIdAndDelete(params.eventId);\n  return redirect(\"/events\");\n}\nexport default function Post() {\n  _s();\n  const {\n    event,\n    authUser\n  } = useLoaderData();\n  function confirmDelete(event) {\n    const response = confirm(\"Please confirm you want to delete this post.\");\n    if (!response) {\n      event.preventDefault();\n    }\n  }\n  return <div id=\"post-page\" className=\"page flex flex-col w-full items-center\">\n      <EventCard event={event} className=\"w-3/4\" />\n      {authUser && <>\n          {authUser._id !== event.creator._id && !event.attendees.some(attendee => attendee._id === authUser._id) && <Form action=\"attend\" method=\"post\">\n                <button>Attend</button>\n              </Form>}\n\n          {authUser._id === event.creator._id && <div className=\"btns flex flex-row space-x-2 items-center\">\n              <Form action=\"update\">\n                <Button isDelete={false} children={\"Update\"} />\n              </Form>\n              <Form action=\"destroy\" method=\"post\" onSubmit={confirmDelete}>\n                <Button isDelete={true} children={\"Delete\"} />\n              </Form>\n            </div>}\n        </>}\n    </div>;\n}\n_s(Post, \"NH9dy8P5QERhkkwZQHCkYOKg5Ww=\", false, function () {\n  return [useLoaderData];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,sBAAqB;AAErB,kBAA8B;AA+CxB;AAvEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AASO,SAAS,KAAK;AAAA,EACnB;AACF,GAAG;AACD,SAAO,CAAC;AAAA,IACN,OAAO,aAAa,KAAK,MAAM,SAAS;AAAA,EAC1C,CAAC;AACH;AA0Be,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,WAAS,cAAcA,QAAO;AAC5B,UAAM,WAAW,QAAQ,8CAA8C;AACvE,QAAI,CAAC,UAAU;AACb,MAAAA,OAAM,eAAe;AAAA,IACvB;AAAA,EACF;AACA,SAAO,mDAAC,SAAI,IAAG,aAAY,WAAU,0CACjC;AAAA,uDAAC,aAAU,OAAc,WAAU,WAAnC;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IAC1C,YAAY,sFACR;AAAA,eAAS,QAAQ,MAAM,QAAQ,OAAO,CAAC,MAAM,UAAU,KAAK,cAAY,SAAS,QAAQ,SAAS,GAAG,KAAK,mDAAC,QAAK,QAAO,UAAS,QAAO,QAClI,6DAAC,YAAO,sBAAR;AAAA;AAAA;AAAA;AAAA,aAAc,KADuF;AAAA;AAAA;AAAA;AAAA,aAEvG;AAAA,MAEH,SAAS,QAAQ,MAAM,QAAQ,OAAO,mDAAC,SAAI,WAAU,6CAClD;AAAA,2DAAC,QAAK,QAAO,UACX,6DAAC,UAAO,UAAU,OAAO,UAAU,YAAnC;AAAA;AAAA;AAAA;AAAA,eAA6C,KAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAK,QAAO,WAAU,QAAO,QAAO,UAAU,eAC7C,6DAAC,UAAO,UAAU,MAAM,UAAU,YAAlC;AAAA;AAAA;AAAA;AAAA,eAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANmC;AAAA;AAAA;AAAA;AAAA,aAOrC;AAAA,SAZO;AAAA;AAAA;AAAA;AAAA,WAaX;AAAA,OAfC;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["event"]
}
