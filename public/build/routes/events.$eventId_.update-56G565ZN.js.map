{
  "version": 3,
  "sources": ["../../../app/routes/events.$eventId_.update.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/events.$eventId_.update.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/events.$eventId_.update.jsx\");\n  import.meta.hot.lastModified = \"1710170800464.2664\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport mongoose from \"mongoose\";\nimport { useState } from \"react\";\nimport { authenticator } from \"../services/auth.server\";\nimport Calendar from \"../components/Calendar\";\nexport function meta() {\n  return [{\n    title: \"FitMeet - Update Event\"\n  }];\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/s\"\n  });\n  const event = await mongoose.models.Event.findById(params.eventId).populate(\"creator\");\n  if (authUser._id != event.creator._id) {\n    return redirect(`/events/${params.eventId}`);\n  }\n  return json({\n    event\n  });\n}\nexport default function UpdateEvent() {\n  _s();\n  const {\n    event\n  } = useLoaderData();\n  const dateString = \"2024-03-06T23:00:00.000Z\";\n  const dateObject = new Date(dateString);\n\n  // Get hours and minutes\n  const hours = dateObject.getHours();\n  const minutes = dateObject.getMinutes();\n\n  // Format the time string\n  const formattedTime = `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  const user = event.creator;\n  const [image, setImage] = useState(event.image ?? null);\n  const [selectedDate, setSelectedDate] = useState(event.date ? new Date(event.date) : \"\");\n  const [location, setLocation] = useState(event.location ?? \"\");\n  const handleDateClick = date => {\n    setSelectedDate(date);\n  };\n  function handleImageChange(event) {\n    const file = event.target.files[0];\n    if (file.size < 500000) {\n      // image file size must be below 0,5MB\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      alert(\"Image size must be less than 0.5MB.\");\n      event.target.value = \"\";\n    }\n  }\n  return <>\n      <h1 className=\"text-3xl font-bold text-black mt-10 mb-4 text-center\">\n        Update Meetup\n      </h1>\n      <Form method=\"post\" className=\"mt-4 flex-col items-center justify-center\" encType=\"multipart/form-data\">\n        <div id=\"upper-div\" className=\"flex justify-center mt-8\">\n          <div id=\"text-div\" className=\"w-full flex flex-col justify-center ml-10 mr-10\">\n            <label className=\"block text-lg mb-2 text-gray-700 text-center\">\n              Title\n            </label>\n            <input id=\"title\" type=\"text\" name=\"title\" defaultValue={event.title ?? \"\"} className=\"block w-full rounded-md border-0 bg-slate-100 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\" />\n            <label className=\"block text-lg mb-2 text-gray-700 text-center mt-2\" htmlFor=\"text\">\n              Description\n            </label>\n            <textarea id=\"text\" defaultValue={event.description ?? \"\"} name=\"description\" className=\"block w-full rounded-md border-0 bg-slate-100 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"></textarea>\n\n            <label className=\"block text-lg mb-2 text-gray-700 text-center mt-2\">\n              Location\n            </label>\n            <input id=\"location\" type=\"adress\" name=\"location\" defaultValue={event.location ?? \"\"} className=\"block w-full rounded-md border-0 bg-slate-100 py-1.5 text-black shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\" />\n          </div>\n          <div id=\"image-div\" className=\"w-full flex justify-center mt-10\">\n            <input className=\"hidden\" id=\"file_input\" name=\"image\" type=\"file\" onChange={handleImageChange} />\n            <img id=\"image-preview\" className=\"cursor-pointer w-72 h-60 object-cover rounded-lg\" src={image ? image : \"https://placehold.co/600x400/F1F5F9/000000?text=Upload+an+image\"} alt=\"Choose\" onError={e => e.target.src = \"https://placehold.co/600x400?text=Error+loading+image\"} onClick={() => document.getElementById(\"file_input\").click()} />\n          </div>\n        </div>\n        <input name=\"creator\" type=\"hidden\" value={user._id ?? \"\"} />\n        <div className=\"mt-6 flex items-center\">\n          <Calendar selectedDate={selectedDate} className=\"ml-20 w-full\" onDateClick={handleDateClick} />\n          <input name=\"date\" type=\"hidden\" value={selectedDate ?? \"\"} />\n\n          <div className=\"ml-8 flex flex-col items-center w-full\">\n            <label className=\"block text-lg mb-2 text-gray-700 text-center\" htmlFor=\"time\">\n              Time\n            </label>\n\n            <input id=\"time\" defaultValue={formattedTime ?? \"\"} type=\"time\" name=\"time\" className=\"p-3 border border-gray-300 rounded\" />\n          </div>\n        </div>\n\n        <div className=\"flex justify-center\">\n          <button type=\"submit\" className=\"mt-6  p-3 bg-blue-500 text-white rounded cursor-pointer text-center\">\n            Update Meetup{\" \"}\n          </button>\n        </div>\n      </Form>\n    </>;\n}\n_s(UpdateEvent, \"m3oECgajiiCvsRU6UgFwHQAarUA=\", false, function () {\n  return [useLoaderData];\n});\n_c = UpdateEvent;\nexport async function action({\n  request,\n  params\n}) {\n  // Protect the route\n  const authUser = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/events\"\n  });\n\n  // Fetch the post to check if the current user is the creator\n  const postToUpdate = await mongoose.models.Post.findById(params.postId);\n  if (postToUpdate.user.toString() !== authUser._id.toString()) {\n    // User is not the creator of the post, redirect\n    return redirect(`/posts/${params.postId}`);\n  }\n\n  // User is authenticated and is the creator, proceed to update the post\n  const formData = await request.formData();\n  const post = Object.fromEntries(formData);\n\n  // Since postToUpdate is already the document you want to update,\n  // you can directly modify and save it, which can be more efficient than findByIdAndUpdate\n  postToUpdate.caption = post.caption;\n  postToUpdate.image = post.image;\n  await postToUpdate.save();\n  return redirect(`/posts/${params.postId}`);\n}\nvar _c;\n$RefreshReg$(_c, \"UpdateEvent\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "event"]
}
